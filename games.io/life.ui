
#root
    title = "Games.io - Conway's Game of Life"
    size = (700,700)
    bg = (35,35,50)
    resizable = False

#text:step
    position = (30,30)
    text = 'Step: 0'
    size = 50
    color = (50,60,220)
    layer = 3

#area
    position = (10,10)
    width = 680
    height = 680
    color = (45,45,70)
    corner_radius = 15
    layer = -1


!script:startGame
    from threading import Thread
    root = ui.root
    gridsize = 25
    grid:dict[(int,int): ui.Area] = {}
    
    ui.usedEvents.append(ui.pygame.MOUSEBUTTONUP)
    
    step = 0
    mouseDown = False
    
    def makeSquare(x,y,color=(30,90,220)):
        global player, players, gridsize, gameOver, r, length, apple

        a = ui.Area(
            position = (x*gridsize,y*gridsize),
            width = gridsize,
            height = gridsize,
            color = color,
            corner_radius = 4
        ).add(root,1)
        grid[(x,y)] = a
    
    def delSquare(x,y):
        if (x,y) not in grid.keys(): return
        a = grid.pop((x,y))
        root.remove(a)
    
    def getNeighbours(x,y,grid):
        result = 0
        for xi in range(x-1,x+2):
            for yi in range(y-1,y+2):
                if (xi,yi) == (x,y): continue
                if grid.get((xi,yi),None):
                    result += 1
        return result
        
    
    def simulationStep():
        global step
        grid_ = grid.copy()
        step += 1
        print(f'Step: {step}')
        objects['step'].text = f'Step: {step}'
        
        for x in range(round(800/gridsize)):
            for y in range(round(700/gridsize)):
                n = getNeighbours(x,y,grid_)
                if n in (2,3):
                    if (x,y) not in grid_ and n == 3:
                        makeSquare(x,y)
                else:
                    if (x,y) in grid_:
                        delSquare(x,y)
            
    
    def on_press(key:str):
        if key == ' ':
            simulationStep()
    
    def customEventListener(event):
        global down
        print(event)
        if event.type == 768:
            Thread(target=on_press,args=[event.dict['unicode']]).start()
        elif event.type == 1025:
            down = True
        elif event.type == 1026:
            down = False
        
            x = round((event.dict['pos'][0]-gridsize/2)/gridsize)
            y = round((event.dict['pos'][1]-gridsize/2)/gridsize)
            if (x,y) in grid:
                delSquare(x,y)
            else:
                makeSquare(x,y)
    
    root.addListener(customEventListener)

!event:onLoad
    runScript('startGame')

!event:onUnload
    print('Unloaded!')
    redirect('games.io/index')
